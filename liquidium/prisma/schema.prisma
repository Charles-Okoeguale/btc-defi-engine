generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  address   String   @unique
  offers    Offer[]
}

model Collection {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  slug        String    @unique
  name        String
  floorPrice  Float
  isSupported Boolean   @default(true)
  ordinals    Ordinal[]
}

model Ordinal {
  id             String     @id @default(cuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  inscriptionId  String     @unique
  inscriptionNumber Int
  name           String?
  contentUrl     String?    // URL to the ordinal content
  renderUrl      String?    // URL to the rendered image
  lastSalePrice  Float?     // Last sale price in BTC
  ownerWalletAddr String    // Owner's wallet address
  collectionId   String
  offers         Offer[]
  collection     Collection @relation(fields: [collectionId], references: [id])
}

model Offer {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  amount     Float    // Loan amount in BTC
  term       Int      // Loan duration in days
  interest   Float    // Annual interest rate
  ltv        Float    // Loan-to-Value ratio (calculated)
  status     String   @default("ACTIVE") // ACTIVE, DELETED, ACCEPTED, etc.
  userId     String
  ordinalId  String
  ordinal    Ordinal  @relation(fields: [ordinalId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  
  @@index([status])
}